"""Altered tables to be easier to reference

Revision ID: 298322ec3e5c
Revises: 4772eb0e1b3c
Create Date: 2024-11-08 11:31:41.348385

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '298322ec3e5c'
down_revision: Union[str, None] = '4772eb0e1b3c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('characters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('character_class_id', sa.Integer(), nullable=True),
    sa.Column('alignment_id', sa.Integer(), nullable=True),
    sa.Column('save_progression_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['alignment_id'], ['alignments.id'], ),
    sa.ForeignKeyConstraint(['character_class_id'], ['character_classes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_characters_id'), 'characters', ['id'], unique=False)
    op.create_table('characterarmorlink',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=True),
    sa.Column('armor_id', sa.Integer(), nullable=True),
    sa.Column('equipped', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['armor_id'], ['armor.id'], ),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.PrimaryKeyConstraint('id', 'character_id', 'armor_id')
    )
    op.create_index(op.f('ix_characterarmorlink_id'), 'characterarmorlink', ['id'], unique=False)
    op.create_table('characterfeatlink',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=True),
    sa.Column('feat_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.ForeignKeyConstraint(['feat_id'], ['feats.id'], ),
    sa.PrimaryKeyConstraint('id', 'character_id', 'feat_id')
    )
    op.create_index(op.f('ix_characterfeatlink_id'), 'characterfeatlink', ['id'], unique=False)
    op.create_table('characterinventorylink',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=True),
    sa.Column('equipment_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.ForeignKeyConstraint(['equipment_id'], ['equipment.id'], ),
    sa.PrimaryKeyConstraint('id', 'character_id', 'equipment_id')
    )
    op.create_index(op.f('ix_characterinventorylink_id'), 'characterinventorylink', ['id'], unique=False)
    op.create_table('charactermoneylink',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=True),
    sa.Column('money_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.ForeignKeyConstraint(['money_id'], ['money_values.id'], ),
    sa.PrimaryKeyConstraint('id', 'character_id', 'money_id')
    )
    op.create_index(op.f('ix_charactermoneylink_id'), 'charactermoneylink', ['id'], unique=False)
    op.create_table('characterskilllink',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=True),
    sa.Column('skill_id', sa.Integer(), nullable=True),
    sa.Column('ranks', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.ForeignKeyConstraint(['skill_id'], ['skills.id'], ),
    sa.PrimaryKeyConstraint('id', 'character_id', 'skill_id')
    )
    op.create_index(op.f('ix_characterskilllink_id'), 'characterskilllink', ['id'], unique=False)
    op.create_table('characterspelllink',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=True),
    sa.Column('spell_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.ForeignKeyConstraint(['spell_id'], ['spells.id'], ),
    sa.PrimaryKeyConstraint('id', 'character_id', 'spell_id')
    )
    op.create_index(op.f('ix_characterspelllink_id'), 'characterspelllink', ['id'], unique=False)
    op.create_table('characterstatlink',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=True),
    sa.Column('stat_id', sa.Integer(), nullable=True),
    sa.Column('value', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.ForeignKeyConstraint(['stat_id'], ['stats.id'], ),
    sa.PrimaryKeyConstraint('id', 'character_id', 'stat_id')
    )
    op.create_index(op.f('ix_characterstatlink_id'), 'characterstatlink', ['id'], unique=False)
    op.create_table('characterweaponlink',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=True),
    sa.Column('weapon_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.ForeignKeyConstraint(['weapon_id'], ['weapons.id'], ),
    sa.PrimaryKeyConstraint('id', 'character_id', 'weapon_id')
    )
    op.create_index(op.f('ix_characterweaponlink_id'), 'characterweaponlink', ['id'], unique=False)
    op.drop_table('character')
    op.alter_column('alignments', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('alignments', 'abbreviation',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.add_column('bab_progressions', sa.Column('level', sa.Integer(), nullable=True))
    op.add_column('bab_progressions', sa.Column('full', sa.Integer(), nullable=True))
    op.add_column('bab_progressions', sa.Column('medium', sa.Integer(), nullable=True))
    op.add_column('bab_progressions', sa.Column('low', sa.Integer(), nullable=True))
    op.drop_column('bab_progressions', 'progression_type')
    op.drop_column('bab_progressions', 'values')
    op.add_column('caster_types', sa.Column('character_level', sa.Integer(), nullable=True))
    op.add_column('caster_types', sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('caster_types', sa.Column('casting_method', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('caster_types', sa.Column('spell_level_0', sa.Integer(), nullable=True))
    op.add_column('caster_types', sa.Column('spell_level_1', sa.Integer(), nullable=True))
    op.add_column('caster_types', sa.Column('spell_level_2', sa.Integer(), nullable=True))
    op.add_column('caster_types', sa.Column('spell_level_3', sa.Integer(), nullable=True))
    op.add_column('caster_types', sa.Column('spell_level_4', sa.Integer(), nullable=True))
    op.add_column('caster_types', sa.Column('spell_level_5', sa.Integer(), nullable=True))
    op.add_column('caster_types', sa.Column('spell_level_6', sa.Integer(), nullable=True))
    op.add_column('caster_types', sa.Column('spell_level_7', sa.Integer(), nullable=True))
    op.add_column('caster_types', sa.Column('spell_level_8', sa.Integer(), nullable=True))
    op.add_column('caster_types', sa.Column('spell_level_9', sa.Integer(), nullable=True))
    op.add_column('caster_types', sa.Column('known_spell_level_0', sa.Integer(), nullable=True))
    op.add_column('caster_types', sa.Column('known_spell_level_1', sa.Integer(), nullable=True))
    op.add_column('caster_types', sa.Column('known_spell_level_2', sa.Integer(), nullable=True))
    op.add_column('caster_types', sa.Column('known_spell_level_3', sa.Integer(), nullable=True))
    op.add_column('caster_types', sa.Column('known_spell_level_4', sa.Integer(), nullable=True))
    op.add_column('caster_types', sa.Column('known_spell_level_5', sa.Integer(), nullable=True))
    op.add_column('caster_types', sa.Column('known_spell_level_6', sa.Integer(), nullable=True))
    op.add_column('caster_types', sa.Column('known_spell_level_7', sa.Integer(), nullable=True))
    op.add_column('caster_types', sa.Column('known_spell_level_8', sa.Integer(), nullable=True))
    op.add_column('caster_types', sa.Column('known_spell_level_9', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_caster_types_casting_method'), 'caster_types', ['casting_method'], unique=False)
    op.create_index(op.f('ix_caster_types_character_level'), 'caster_types', ['character_level'], unique=False)
    op.create_index(op.f('ix_caster_types_type'), 'caster_types', ['type'], unique=False)
    op.drop_column('caster_types', 'caster_type')
    op.drop_column('caster_types', 'name')
    op.drop_column('caster_types', 'spells_per_day')
    op.drop_column('caster_types', 'spells_known')
    op.drop_column('caster_types', 'preparation_type')
    op.drop_column('caster_types', 'focus_type')
    op.alter_column('class_abilities', 'description',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('class_abilities', 'level_requirement',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('class_abilities', 'numeric_modifier',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('class_abilities', 'category',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('equipment', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('equipment', 'weight',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('feats', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('feats', 'prerequisites')
    op.alter_column('languages', 'learned_by_races',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               nullable=True)
    op.drop_column('races', 'racial_traits')
    op.add_column('saving_throw_progressions', sa.Column('level', sa.Integer(), nullable=True))
    op.add_column('saving_throw_progressions', sa.Column('good_save', sa.Integer(), nullable=True))
    op.add_column('saving_throw_progressions', sa.Column('poor_save', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_saving_throw_progressions_level'), 'saving_throw_progressions', ['level'], unique=False)
    op.drop_column('saving_throw_progressions', 'progression_type')
    op.drop_column('saving_throw_progressions', 'values')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('saving_throw_progressions', sa.Column('values', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('saving_throw_progressions', sa.Column('progression_type', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_saving_throw_progressions_level'), table_name='saving_throw_progressions')
    op.drop_column('saving_throw_progressions', 'poor_save')
    op.drop_column('saving_throw_progressions', 'good_save')
    op.drop_column('saving_throw_progressions', 'level')
    op.add_column('races', sa.Column('racial_traits', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.alter_column('languages', 'learned_by_races',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               nullable=True)
    op.add_column('feats', sa.Column('prerequisites', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.alter_column('feats', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('equipment', 'weight',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('equipment', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('class_abilities', 'category',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('class_abilities', 'numeric_modifier',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('class_abilities', 'level_requirement',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('class_abilities', 'description',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.add_column('caster_types', sa.Column('focus_type', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('caster_types', sa.Column('preparation_type', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('caster_types', sa.Column('spells_known', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('caster_types', sa.Column('spells_per_day', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('caster_types', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('caster_types', sa.Column('caster_type', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_caster_types_type'), table_name='caster_types')
    op.drop_index(op.f('ix_caster_types_character_level'), table_name='caster_types')
    op.drop_index(op.f('ix_caster_types_casting_method'), table_name='caster_types')
    op.drop_column('caster_types', 'known_spell_level_9')
    op.drop_column('caster_types', 'known_spell_level_8')
    op.drop_column('caster_types', 'known_spell_level_7')
    op.drop_column('caster_types', 'known_spell_level_6')
    op.drop_column('caster_types', 'known_spell_level_5')
    op.drop_column('caster_types', 'known_spell_level_4')
    op.drop_column('caster_types', 'known_spell_level_3')
    op.drop_column('caster_types', 'known_spell_level_2')
    op.drop_column('caster_types', 'known_spell_level_1')
    op.drop_column('caster_types', 'known_spell_level_0')
    op.drop_column('caster_types', 'spell_level_9')
    op.drop_column('caster_types', 'spell_level_8')
    op.drop_column('caster_types', 'spell_level_7')
    op.drop_column('caster_types', 'spell_level_6')
    op.drop_column('caster_types', 'spell_level_5')
    op.drop_column('caster_types', 'spell_level_4')
    op.drop_column('caster_types', 'spell_level_3')
    op.drop_column('caster_types', 'spell_level_2')
    op.drop_column('caster_types', 'spell_level_1')
    op.drop_column('caster_types', 'spell_level_0')
    op.drop_column('caster_types', 'casting_method')
    op.drop_column('caster_types', 'type')
    op.drop_column('caster_types', 'character_level')
    op.add_column('bab_progressions', sa.Column('values', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('bab_progressions', sa.Column('progression_type', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('bab_progressions', 'low')
    op.drop_column('bab_progressions', 'medium')
    op.drop_column('bab_progressions', 'full')
    op.drop_column('bab_progressions', 'level')
    op.alter_column('alignments', 'abbreviation',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('alignments', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.create_table('categories',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='categories_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_categories_id', 'categories', ['id'], unique=False)
    op.create_table('products',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('price', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('quality', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('summary', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('image', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name='products_category_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='products_pkey')
    )
    op.create_index('ix_products_id', 'products', ['id'], unique=False)
    op.create_table('houses',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('sturdiness', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pig_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['pig_id'], ['pigs.id'], name='houses_pig_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='houses_pkey')
    )
    op.create_index('ix_houses_id', 'houses', ['id'], unique=False)
    op.create_table('treasures',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('value', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('dragon_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('treasure_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['dragon_id'], ['dragons.id'], name='treasures_dragon_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='treasures_pkey')
    )
    op.create_index('ix_treasures_id', 'treasures', ['id'], unique=False)
    op.create_table('enrollments',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('student_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('course_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('enrollment_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], name='enrollments_course_id_fkey'),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], name='enrollments_student_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='enrollments_pkey')
    )
    op.create_table('character',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('character_class_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('race_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('weapon_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('spell_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('feat_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('armor_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('caster_type_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('money_value_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('racial_trait_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('saving_throw_progression_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('skill_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('stat_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('class_ability_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('language_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('bab_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('equipment_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('alignment_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['alignment_id'], ['alignments.id'], name='character_alignment_id_fkey'),
    sa.ForeignKeyConstraint(['armor_id'], ['armor.id'], name='character_armor_id_fkey'),
    sa.ForeignKeyConstraint(['bab_id'], ['bab_progressions.id'], name='character_bab_id_fkey'),
    sa.ForeignKeyConstraint(['caster_type_id'], ['caster_types.id'], name='character_caster_type_id_fkey'),
    sa.ForeignKeyConstraint(['character_class_id'], ['character_classes.id'], name='character_character_class_id_fkey'),
    sa.ForeignKeyConstraint(['class_ability_id'], ['class_abilities.id'], name='character_class_ability_id_fkey'),
    sa.ForeignKeyConstraint(['equipment_id'], ['equipment.id'], name='character_equipment_id_fkey'),
    sa.ForeignKeyConstraint(['feat_id'], ['feats.id'], name='character_feat_id_fkey'),
    sa.ForeignKeyConstraint(['language_id'], ['languages.id'], name='character_language_id_fkey'),
    sa.ForeignKeyConstraint(['money_value_id'], ['money_values.id'], name='character_money_value_id_fkey'),
    sa.ForeignKeyConstraint(['race_id'], ['races.id'], name='character_race_id_fkey'),
    sa.ForeignKeyConstraint(['racial_trait_id'], ['racial_traits.id'], name='character_racial_trait_id_fkey'),
    sa.ForeignKeyConstraint(['saving_throw_progression_id'], ['saving_throw_progressions.id'], name='character_saving_throw_progression_id_fkey'),
    sa.ForeignKeyConstraint(['skill_id'], ['skills.id'], name='character_skill_id_fkey'),
    sa.ForeignKeyConstraint(['spell_id'], ['spells.id'], name='character_spell_id_fkey'),
    sa.ForeignKeyConstraint(['stat_id'], ['stats.id'], name='character_stat_id_fkey'),
    sa.ForeignKeyConstraint(['weapon_id'], ['weapons.id'], name='character_weapon_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='character_pkey')
    )
    op.drop_index(op.f('ix_characterweaponlink_id'), table_name='characterweaponlink')
    op.drop_table('characterweaponlink')
    op.drop_index(op.f('ix_characterstatlink_id'), table_name='characterstatlink')
    op.drop_table('characterstatlink')
    op.drop_index(op.f('ix_characterspelllink_id'), table_name='characterspelllink')
    op.drop_table('characterspelllink')
    op.drop_index(op.f('ix_characterskilllink_id'), table_name='characterskilllink')
    op.drop_table('characterskilllink')
    op.drop_index(op.f('ix_charactermoneylink_id'), table_name='charactermoneylink')
    op.drop_table('charactermoneylink')
    op.drop_index(op.f('ix_characterinventorylink_id'), table_name='characterinventorylink')
    op.drop_table('characterinventorylink')
    op.drop_index(op.f('ix_characterfeatlink_id'), table_name='characterfeatlink')
    op.drop_table('characterfeatlink')
    op.drop_index(op.f('ix_characterarmorlink_id'), table_name='characterarmorlink')
    op.drop_table('characterarmorlink')
    op.drop_index(op.f('ix_characters_id'), table_name='characters')
    op.drop_table('characters')
    # ### end Alembic commands ###
