"""Added defaults to fields

Revision ID: 9c1a6099ac2b
Revises: 1bf453a8375a
Create Date: 2024-11-05 18:30:54.805323

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '9c1a6099ac2b'
down_revision: Union[str, None] = '1bf453a8375a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('armor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('material', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.Column('armor_bonus', sa.Float(), nullable=True),
    sa.Column('max_dex_bonus', sa.Float(), nullable=True),
    sa.Column('armor_check_penalty', sa.Float(), nullable=True),
    sa.Column('arcane_spell_failure', sa.Float(), nullable=True),
    sa.Column('max_speed', sa.Float(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_armor_id'), 'armor', ['id'], unique=False)
    op.create_table('caster_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('focus_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('caster_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('preparation_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('spells_per_day', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('spells_known', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_caster_types_id'), 'caster_types', ['id'], unique=False)
    op.create_table('feats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('numeric_modifier', sa.Float(), nullable=True),
    sa.Column('level_requirement', sa.Integer(), nullable=True),
    sa.Column('prerequisites', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_feats_id'), 'feats', ['id'], unique=False)
    op.create_table('money_values',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('platinum', sa.Float(), nullable=True),
    sa.Column('gold', sa.Float(), nullable=True),
    sa.Column('electrum', sa.Float(), nullable=True),
    sa.Column('silver', sa.Float(), nullable=True),
    sa.Column('copper', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_money_values_id'), 'money_values', ['id'], unique=False)
    op.create_table('races',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('stat_modifiers', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('size_category', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('starting_languages', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('racial_traits', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_races_id'), 'races', ['id'], unique=False)
    op.create_table('racial_traits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('numeric_modifier', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_racial_traits_id'), 'racial_traits', ['id'], unique=False)
    op.create_table('saving_throw_progressions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('progression_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('values', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_saving_throw_progressions_id'), 'saving_throw_progressions', ['id'], unique=False)
    op.create_table('skills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('modifying_stat', sa.Integer(), nullable=True),
    sa.Column('untrained', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_skills_id'), 'skills', ['id'], unique=False)
    op.create_table('spells',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('spell_level', sa.Integer(), nullable=True),
    sa.Column('class_lists', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('material_component', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('somatic_component', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('verbal_component', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('school', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_spells_id'), 'spells', ['id'], unique=False)
    op.create_table('stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('abbreviation', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stats_id'), 'stats', ['id'], unique=False)
    op.create_table('weapons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('damage_dice', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('damage_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('material', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('range', sa.Float(), nullable=True),
    sa.Column('reach', sa.Float(), nullable=True),
    sa.Column('special_properties', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('numeric_modifier', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_weapons_id'), 'weapons', ['id'], unique=False)
    op.add_column('character_classes', sa.Column('bab_progression', sa.Integer(), nullable=True))
    op.add_column('character_classes', sa.Column('fort_progression', sa.Integer(), nullable=True))
    op.add_column('character_classes', sa.Column('ref_progression', sa.Integer(), nullable=True))
    op.add_column('character_classes', sa.Column('will_progression', sa.Integer(), nullable=True))
    op.add_column('character_classes', sa.Column('class_skills', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('character_classes', sa.Column('proficiencies', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('character_classes', sa.Column('caster_type_id', sa.Integer(), nullable=True))
    op.alter_column('character_classes', 'hit_die',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('character_classes', 'skill_points',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_index('ix_character_classes_name', table_name='character_classes')
    op.create_foreign_key(None, 'character_classes', 'caster_types', ['caster_type_id'], ['id'])
    op.drop_column('character_classes', 'base_attack_bonus')
    op.drop_column('character_classes', 'saving_throws')
    op.drop_column('character_classes', 'description')
    op.drop_column('character_classes', 'skills')
    op.add_column('class_abilities', sa.Column('level_requirement', sa.Integer(), nullable=True))
    op.add_column('class_abilities', sa.Column('numeric_modifier', sa.Float(), nullable=True))
    op.add_column('class_abilities', sa.Column('category', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.alter_column('class_abilities', 'description',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_constraint('class_abilities_character_class_id_fkey', 'class_abilities', type_='foreignkey')
    op.drop_column('class_abilities', 'level_required')
    op.drop_column('class_abilities', 'extra_metadata')
    op.drop_column('class_abilities', 'character_class_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('class_abilities', sa.Column('character_class_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('class_abilities', sa.Column('extra_metadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('class_abilities', sa.Column('level_required', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('class_abilities_character_class_id_fkey', 'class_abilities', 'character_classes', ['character_class_id'], ['id'])
    op.alter_column('class_abilities', 'description',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('class_abilities', 'category')
    op.drop_column('class_abilities', 'numeric_modifier')
    op.drop_column('class_abilities', 'level_requirement')
    op.add_column('character_classes', sa.Column('skills', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('character_classes', sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('character_classes', sa.Column('saving_throws', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('character_classes', sa.Column('base_attack_bonus', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'character_classes', type_='foreignkey')
    op.create_index('ix_character_classes_name', 'character_classes', ['name'], unique=True)
    op.alter_column('character_classes', 'skill_points',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('character_classes', 'hit_die',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('character_classes', 'caster_type_id')
    op.drop_column('character_classes', 'proficiencies')
    op.drop_column('character_classes', 'class_skills')
    op.drop_column('character_classes', 'will_progression')
    op.drop_column('character_classes', 'ref_progression')
    op.drop_column('character_classes', 'fort_progression')
    op.drop_column('character_classes', 'bab_progression')
    op.drop_index(op.f('ix_weapons_id'), table_name='weapons')
    op.drop_table('weapons')
    op.drop_index(op.f('ix_stats_id'), table_name='stats')
    op.drop_table('stats')
    op.drop_index(op.f('ix_spells_id'), table_name='spells')
    op.drop_table('spells')
    op.drop_index(op.f('ix_skills_id'), table_name='skills')
    op.drop_table('skills')
    op.drop_index(op.f('ix_saving_throw_progressions_id'), table_name='saving_throw_progressions')
    op.drop_table('saving_throw_progressions')
    op.drop_index(op.f('ix_racial_traits_id'), table_name='racial_traits')
    op.drop_table('racial_traits')
    op.drop_index(op.f('ix_races_id'), table_name='races')
    op.drop_table('races')
    op.drop_index(op.f('ix_money_values_id'), table_name='money_values')
    op.drop_table('money_values')
    op.drop_index(op.f('ix_feats_id'), table_name='feats')
    op.drop_table('feats')
    op.drop_index(op.f('ix_caster_types_id'), table_name='caster_types')
    op.drop_table('caster_types')
    op.drop_index(op.f('ix_armor_id'), table_name='armor')
    op.drop_table('armor')
    # ### end Alembic commands ###
